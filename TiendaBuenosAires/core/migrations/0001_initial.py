# Generated by Django 4.0.4 on 2022-05-30 01:01

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='myUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_customer', models.BooleanField(default=False)),
                ('is_tecnico', models.BooleanField(default=False)),
                ('is_bodeguero', models.BooleanField(default=False)),
                ('is_vendedor', models.BooleanField(default=False)),
                ('rut', models.IntegerField(null=True, verbose_name='Rut')),
                ('dirusu', models.CharField(max_length=300, verbose_name='Direccion')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Producto',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='id de producto')),
                ('nombre', models.CharField(max_length=50, verbose_name='Nombre del producto')),
                ('precio', models.IntegerField(verbose_name='precio')),
                ('imagen_producto', models.ImageField(default='', upload_to='images/productos', verbose_name='imagen del producto')),
                ('descripcion', models.CharField(max_length=50, verbose_name='Descripción')),
            ],
        ),
        migrations.CreateModel(
            name='WebSolicitudServicio',
            fields=[
                ('numeross', models.AutoField(primary_key=True, serialize=False, verbose_name='Nro solicitud de servicio')),
                ('tipo_servicio', models.CharField(choices=[('R', 'Reparacion'), ('M', 'Mantencion')], default='R', max_length=1)),
                ('fecha_creacion_solicitud', models.DateField(auto_now_add=True, verbose_name='Fecha creación de solicitud')),
                ('fecha_visita_solicitada', models.DateField(verbose_name='Fecha de visita solicitada')),
                ('hora_visita_solicitada', models.TimeField(verbose_name='Hora de visita solicitada')),
                ('descripcion_requerimiento', models.CharField(max_length=150, verbose_name='Descripción del servicio requerido')),
                ('acepta_fecha_hora_solicitada', models.CharField(blank=True, choices=[('A', 'Aceptar'), ('R', 'Rechazar')], default='A', max_length=1, null=True, verbose_name='Aceptar o rechazar fecha de solicitud')),
                ('estado_ss', models.CharField(blank=True, choices=[('FA', 'Fecha Visita Aceptada'), ('NFP', 'Nueva fecha propuesta'), ('FVA', 'Fecha de visita acordada'), ('SR', 'Servicio Realizado')], default='FA', max_length=3, null=True)),
                ('id_cli', models.ForeignKey(db_column='idcli', on_delete=django.db.models.deletion.DO_NOTHING, related_name='rut_cliente', to=settings.AUTH_USER_MODEL)),
                ('id_tec', models.ForeignKey(blank=True, db_column='idtec', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='rut_tecnico', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WebFactura',
            fields=[
                ('nrofac', models.AutoField(primary_key=True, serialize=False, verbose_name='Nro factura')),
                ('fechafac', models.DateField(auto_now_add=True, verbose_name='Fecha factura')),
                ('monto', models.IntegerField(verbose_name='Monto')),
                ('descripcion', models.CharField(max_length=200, null=True, verbose_name='Descripcion factura')),
                ('id_producto', models.OneToOneField(db_column='id_producto', on_delete=django.db.models.deletion.DO_NOTHING, to='core.producto')),
                ('rut_cliente', models.ForeignKey(db_column='rutcli', on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GuiasDespacho',
            fields=[
                ('numeroGD', models.AutoField(primary_key=True, serialize=False, verbose_name='Numero guia de despacho')),
                ('estadogd', models.CharField(choices=[('B', 'En Bodega'), ('D', 'Despachado'), ('E', 'Entregado')], default='B', max_length=1)),
                ('id_producto', models.ForeignKey(db_column='id_producto', on_delete=django.db.models.deletion.DO_NOTHING, to='core.producto')),
                ('nrofac', models.ForeignKey(db_column='nrofac', on_delete=django.db.models.deletion.DO_NOTHING, to='core.webfactura')),
            ],
        ),
        migrations.CreateModel(
            name='BodegaStockProducto',
            fields=[
                ('idb', models.IntegerField(primary_key=True, serialize=False)),
                ('id_producto', models.ForeignKey(db_column='id_producto', on_delete=django.db.models.deletion.DO_NOTHING, to='core.producto')),
                ('nrofac', models.ForeignKey(blank=True, db_column='nrofac', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.webfactura')),
            ],
        ),
    ]
